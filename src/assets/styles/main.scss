// Color Variables
$red: #E31E24;
$dark: #1a1a1a;
$gray: #333;
$light-gray: #f5f5f5;
$white: #ffffff;
$black: #000000;

// Gradient Variables
$gradient-red: linear-gradient(135deg, #E31E24 0%, #b71c1c 100%);
$gradient-dark: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
$gradient-gold: linear-gradient(135deg, #ffd700 0%, #ffb300 100%);

// Typography Variables
$font-primary: 'Montserrat', sans-serif;
$font-secondary: 'Roboto', sans-serif;

// Z-index Variables
$z-index-modal: 1000;
$z-index-overlay: 999;
$z-index-header: 100;
$z-index-dropdown: 50;

// Breakpoints
$mobile: 768px;
$tablet: 1024px;
$desktop: 1200px;

// Spacing
$spacing-xs: 0.5rem;
$spacing-sm: 1rem;
$spacing-md: 1.5rem;
$spacing-lg: 2rem;
$spacing-xl: 3rem;
$spacing-xxl: 4rem;

// Box shadows
$shadow-light: 0 2px 8px rgba(0, 0, 0, 0.1);
$shadow-medium: 0 4px 16px rgba(0, 0, 0, 0.15);
$shadow-heavy: 0 8px 32px rgba(0, 0, 0, 0.25);
$shadow-3d: 0 10px 30px rgba(0, 0, 0, 0.3);

// Base Styles
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
  height: 100%;
  overflow-y: auto;
  
  @media (max-width: $mobile) {
    font-size: 14px;
  }
}

body {
  font-family: $font-primary;
  line-height: 1.6;
  color: $dark;
  background-color: $dark;
  overflow-x: hidden;
  overflow-y: auto;
  cursor: auto; // Allow default cursor for better usability
  min-height: 100vh;
}

// Custom cursor
.cursor {
  position: fixed;
  width: 20px;
  height: 20px;
  background: $red;
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: difference;
  transition: transform 0.1s ease;
  
  &.hover {
    transform: scale(2);
    background: $white;
  }
}

// Typography Classes
.text-3d {
  font-weight: 900;
  font-size: clamp(2rem, 8vw, 8rem);
  line-height: 0.9;
  letter-spacing: -0.05em;
  transform: perspective(1000px) rotateX(15deg) rotateY(-15deg);
  transform-style: preserve-3d;
  text-transform: uppercase;
  color: $white;
  text-shadow: 
    1px 1px 0 $black,
    2px 2px 0 darken($dark, 10%),
    3px 3px 0 darken($dark, 20%),
    4px 4px 0 darken($dark, 30%),
    5px 5px 15px rgba(0, 0, 0, 0.8),
    0 0 40px rgba($red, 0.3);
    
  &.red {
    background: $gradient-red;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 
      1px 1px 0 darken($red, 20%),
      2px 2px 0 darken($red, 30%),
      3px 3px 0 darken($red, 40%),
      4px 4px 0 darken($red, 50%),
      5px 5px 15px rgba(0, 0, 0, 0.8),
      0 0 40px rgba($red, 0.5);
  }
  
  .letter {
    display: inline-block;
    transform: translateZ(20px);
    transition: all 0.3s ease;
    
    &:hover {
      transform: translateZ(40px) rotateY(20deg);
      text-shadow: 
        2px 2px 0 $black,
        4px 4px 0 darken($dark, 10%),
        6px 6px 0 darken($dark, 20%),
        8px 8px 0 darken($dark, 30%),
        10px 10px 20px rgba(0, 0, 0, 0.9);
    }
  }
}

// Glassmorphism
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: $shadow-medium;
}

// Noise texture overlay
.noise-overlay {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.05;
    background: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='1' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
  }
}

// Hover card effects
.card-3d {
  perspective: 1000px;
  transition: transform 0.3s ease;
  
  &:hover {
    transform: rotateX(5deg) rotateY(5deg) scale(1.02);
  }
  
  .card-inner {
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s ease;
    
    &:hover {
      transform: rotateY(10deg);
    }
  }
}

// Buttons
.btn {
  display: inline-block;
  padding: $spacing-md $spacing-xl;
  font-family: $font-primary;
  font-weight: 700;
  font-size: 1rem;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  border: none;
  border-radius: 0;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }
  
  &:hover::before {
    left: 100%;
  }
  
  &.btn-primary {
    background: $gradient-red;
    color: $white;
    box-shadow: $shadow-heavy;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 40px rgba($red, 0.4);
    }
  }
  
  &.btn-outline {
    background: transparent;
    color: $white;
    border: 2px solid $white;
    
    &:hover {
      background: $white;
      color: $dark;
      transform: translateY(-2px);
    }
  }
}

// Animations
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

// Geometric background patterns inspired by references
.geometric-bg {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.1;
    background:
      linear-gradient(45deg, transparent 40%, rgba($red, 0.1) 50%, transparent 60%),
      linear-gradient(-45deg, transparent 40%, rgba($red, 0.05) 50%, transparent 60%);
    background-size: 80px 80px;
    pointer-events: none;
    animation: geometricShift 20s ease-in-out infinite;
  }

  &.red-variant::before {
    background:
      conic-gradient(from 0deg at 50% 50%,
        transparent 0deg,
        rgba($red, 0.1) 60deg,
        transparent 120deg,
        rgba($red-light, 0.05) 180deg,
        transparent 240deg,
        rgba($red, 0.08) 300deg,
        transparent 360deg),
      radial-gradient(circle at 25% 25%, rgba($red, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba($red-light, 0.05) 0%, transparent 50%);
    background-size: 120px 120px, 200px 200px, 150px 150px;
  }

  &.complex-variant::before {
    background:
      polygon-pattern($red, 0.08),
      linear-gradient(30deg, transparent 30%, rgba($red-light, 0.05) 50%, transparent 70%),
      linear-gradient(-30deg, transparent 30%, rgba($red, 0.03) 50%, transparent 70%);
    background-size: 100px 100px, 60px 60px, 80px 80px;
  }
}

@function polygon-pattern($color, $opacity) {
  @return repeating-linear-gradient(
    60deg,
    transparent,
    transparent 10px,
    rgba($color, $opacity) 10px,
    rgba($color, $opacity) 20px
  );
}

@keyframes geometricShift {
  0%, 100% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
  25% {
    transform: translateX(20px) translateY(-10px) rotate(2deg);
  }
  50% {
    transform: translateX(-10px) translateY(15px) rotate(-1deg);
  }
  75% {
    transform: translateX(15px) translateY(-5px) rotate(1deg);
  }
}

// 3D Geometric elements
.geometric-3d {
  position: absolute;
  pointer-events: none;

  &.cube {
    width: 40px;
    height: 40px;
    background: rgba($red, 0.1);
    transform-style: preserve-3d;
    animation: rotate3D 10s linear infinite;

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: rgba($red-light, 0.15);
      transform: translateZ(20px);
    }

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: rgba($red-dark, 0.2);
      transform: rotateY(90deg) translateZ(20px);
    }
  }

  &.pyramid {
    width: 0;
    height: 0;
    border-left: 20px solid transparent;
    border-right: 20px solid transparent;
    border-bottom: 35px solid rgba($red, 0.15);
    animation: float3D 8s ease-in-out infinite;
  }
}

@keyframes rotate3D {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

// Advanced glassmorphism with geometric elements
.glass-enhanced {
  background: rgba($white, 0.05);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  border: 1px solid rgba($white, 0.1);
  box-shadow:
    0 8px 32px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba($white, 0.2);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(circle at 20% 20%, rgba($red, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, rgba($red-light, 0.05) 0%, transparent 50%);
    pointer-events: none;
  }

  &:hover {
    transform: translateY(-5px);
    box-shadow:
      0 16px 64px rgba(0, 0, 0, 0.4),
      inset 0 1px 0 rgba($white, 0.3),
      0 0 20px rgba($red, 0.1);
  }
}

// Utility Classes
.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 $spacing-lg;

  @media (max-width: $mobile) {
    padding: 0 $spacing-md;
  }
}

.section {
  padding: $spacing-xxl 0;
  
  @media (max-width: $mobile) {
    padding: $spacing-xl 0;
  }
}

.text-center {
  text-align: center;
}

.text-red {
  color: $red;
}

.text-white {
  color: $white;
}

.bg-dark {
  background: $dark;
}

.bg-red {
  background: $gradient-red;
}

.mb-sm { margin-bottom: $spacing-sm; }
.mb-md { margin-bottom: $spacing-md; }
.mb-lg { margin-bottom: $spacing-lg; }
.mb-xl { margin-bottom: $spacing-xl; }

.mt-sm { margin-top: $spacing-sm; }
.mt-md { margin-top: $spacing-md; }
.mt-lg { margin-top: $spacing-lg; }
.mt-xl { margin-top: $spacing-xl; }

// Grid System
.grid {
  display: grid;
  gap: $spacing-lg;
  
  &.grid-2 {
    grid-template-columns: repeat(2, 1fr);
    
    @media (max-width: $mobile) {
      grid-template-columns: 1fr;
    }
  }
  
  &.grid-3 {
    grid-template-columns: repeat(3, 1fr);
    
    @media (max-width: $tablet) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @media (max-width: $mobile) {
      grid-template-columns: 1fr;
    }
  }
  
  &.grid-4 {
    grid-template-columns: repeat(4, 1fr);
    
    @media (max-width: $tablet) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @media (max-width: $mobile) {
      grid-template-columns: 1fr;
    }
  }
}

.flex {
  display: flex;
  
  &.flex-center {
    align-items: center;
    justify-content: center;
  }
  
  &.flex-between {
    align-items: center;
    justify-content: space-between;
  }
  
  &.flex-column {
    flex-direction: column;
  }
}